{"version":3,"sources":["FormContacts/Form.js","Contacts/Contacts.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","duplicateSearch","reset","this","onSubmit","type","pattern","title","required","onChange","className","Component","Contacts","libraryContacts","onDelete","map","el","onClick","id","Filter","App","contacts","filter","data","arrNames","lowerCase","toLowerCase","push","includes","alert","addToLibrary","contact","shortid","generate","changeFilter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","deleteById","visibleContacts","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34346dee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Form.css\";\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.duplicateSearch(this.state);\r\n    // this.props.addToLibrary(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\" type=\"submit\">\r\n          Добавить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  state: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  }),\r\n\r\n  handleChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form;\r\n","import './Contacts.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Contacts = ({ libraryContacts , onDelete}) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"contacts__list\">\r\n        {libraryContacts.map((el) => (\r\n          <li className=\"contacts__item\" key={el.id}>\r\n            <p className=\"contact__name\">{el.name}:\r\n            <span className=\"contact__tel\">{el.number}</span>\r\n            </p>\r\n            <button className=\"btn btn-delete\" onClick={() => onDelete(el.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  \r\n  onDelete: PropTypes.func,\r\n };\r\nexport default Contacts;\r\n","const Filter = ({value, onChange}) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input \r\n      type=\"text\" \r\n      value={value} \r\n      onChange={onChange} \r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Form from \"./FormContacts/Form\";\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n  duplicateSearch = (data) => {\r\n    const { name } = data;\r\n    const arrNames = [];\r\n    const lowerCase= name.toLowerCase();\r\n\r\n    this.state.contacts.map((el) => arrNames.push(el.name.toLowerCase()));\r\n    if (!arrNames.includes(lowerCase)) {\r\n      this.addToLibrary(data);\r\n    } else alert(`${name} is alredy in contacts`);\r\n  };\r\n\r\n  addToLibrary = (data) => {\r\n    const { name, number } = data;\r\n\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => {\r\n      return {\r\n        contacts: [contact, ...contacts],\r\n      };\r\n    });\r\n  };\r\n  changeFilter = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  deleteById = (id) => {\r\n    this.setState(({ contacts }) => {\r\n      return {\r\n        contacts: contacts.filter((contact) => contact.id !== id),\r\n      };\r\n    });\r\n  };\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Phonebook</h1>\r\n        <Form\r\n          duplicateSearch={this.duplicateSearch}\r\n          addToLibrary={this.addToLibrary}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <Contacts\r\n          libraryContacts={visibleContacts}\r\n          onDelete={this.deleteById}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  state: PropTypes.shape({\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n  }),\r\n\r\n  changeFilter: PropTypes.func,\r\n  getVisibleContacts: PropTypes.func,\r\n  deleteById: PropTypes.func,\r\n  addToLibrary: PropTypes.func,\r\n  duplicateSearch:PropTypes.func,\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}